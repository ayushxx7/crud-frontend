{"version":3,"sources":["redux/types.js","redux/actions/people.js","components/People.js","components/AddPerson.js","App.js","redux/reducers/people.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_PERSON","DELETE_PERSON","UPDATE_PERSON","GET_PERSON","GET_PEOPLE","fetchPersons","dispatch","axios","get","then","res","type","payload","data","catch","err","console","error","People","renderCard","person","Card","className","bg","text","id","_id","border","Header","as","name","Button","variant","onClick","props","deletePerson","bind","Body","Title","about","Text","ListGroup","Item","languages","join","dob","Date","toDateString","profession","mode","initialValue","editText","onSubmit","updatePerson","displayPeopleCards","Object","values","persons","map","index","debug","document","title","this","CardColumns","React","Component","connect","state","people","personId","delete","toast","patch","success","AddPerson","onChange","e","target","setState","value","preventDefault","addPerson","addPersonForm","address","maritalStatus","Container","Form","Row","Group","Col","controlId","Label","Control","placeholder","required","max","getCurrentDate","separator","newDate","date","getDate","month","getMonth","year","getFullYear","post","Person","dark","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","initialState","personReducer","action","push","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","rootElement","getElementById","ReactDOM","render"],"mappings":"kNAAaA,EAAa,aACbC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aACbC,EAAa,a,yBCMbC,EAAe,kBAAM,SAACC,GACjCC,IACGC,IADH,kDAEGC,MAAK,SAACC,GACLJ,EAAS,CACPK,KAAMP,EACNQ,QAASF,EAAIG,UAGhBC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,gECL5BG,E,4MAMJC,WAAa,SAACC,GACZ,OACE,eAACC,EAAA,EAAD,CACEC,UAAU,8BACVC,GAAG,QACHC,KAAK,OACLC,GAAE,UAAKL,EAAOM,KAEdC,OAAO,OANT,UAQE,eAACN,EAAA,EAAKO,OAAN,CAAaC,GAAG,KAAKJ,GAAE,UAAKL,EAAOM,IAAZ,YAAmBN,EAAOU,MAAjD,UACGV,EAAOU,KAAM,IACd,cAACC,EAAA,EAAD,CACEC,QAAQ,UACRV,UAAU,mBACVW,QAAS,EAAKC,MAAMC,aAAaC,KAAxB,eAAmChB,EAAOM,KAHrD,mCAQF,eAACL,EAAA,EAAKgB,KAAN,WACE,cAAChB,EAAA,EAAKiB,MAAN,CAAYb,GAAE,UAAKL,EAAOM,IAAZ,YAAmBN,EAAOmB,MAA1B,KAAd,SACGnB,EAAOmB,QAEV,cAAClB,EAAA,EAAKmB,KAAN,CAAWf,GAAE,UAAKL,EAAOM,UAG3B,eAACe,EAAA,EAAD,CAAWnB,UAAU,mBAArB,UACE,eAACmB,EAAA,EAAUC,KAAX,CAEEjB,GAAE,UAAKL,EAAOM,IAAZ,YAAmBN,EAAOuB,WAF9B,UAIE,8CACCvB,EAAOuB,UAAUC,KAAK,QALzB,UACUxB,EAAOM,IADjB,YACwBN,EAAOuB,YAM/B,eAACF,EAAA,EAAUC,KAAX,CAEEjB,GAAE,UAAKL,EAAOM,IAAZ,YAAmBN,EAAOyB,KAF9B,UAIE,0CACC,IAAIC,KAAK1B,EAAOyB,KAAKE,iBALxB,UACU3B,EAAOM,IADjB,YACwBN,EAAOyB,MAM/B,eAACJ,EAAA,EAAUC,KAAX,CAEEjB,GAAE,UAAKL,EAAOM,IAAZ,YAAmBN,EAAO4B,YAF9B,UAIE,6CAEA,cAAC,IAAD,CACErC,KAAK,YACLsC,KAAK,SACLC,aAAc9B,EAAO4B,WACrBG,SAAS,eACTC,SAAU,SAACJ,GAAD,OACR,EAAKd,MAAMmB,aAAajC,EAAOM,IAAKsB,QAZ1C,UACU5B,EAAOM,IADjB,YACwBN,EAAO4B,kBAzCnC,UAKU5B,EAAOM,O,EAuDrB4B,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKtB,MAAMuB,SAASC,KAAI,SAACtC,EAAQuC,GAGlD,OAFF3C,QAAQ4C,MAAM,SAAUxC,EAAOU,KAAM6B,GAE5B,EAAKxC,WAAWC,O,uDAvE7B,WACEyC,SAASC,MAAQ,OACjBC,KAAK7B,MAAM7B,iB,oBA0Eb,WACE,OACE,sBAAKiB,UAAU,YAAf,UACG,8DACD,cAAC0C,EAAA,EAAD,UAAcD,KAAKT,8B,GAjFNW,IAAMC,WA0FZC,eAHS,SAACC,GAAD,MAAY,CAClCX,QAASW,EAAMC,OAAOZ,WAEgB,CACtCpD,eACA8B,aDlE0B,SAACmC,GAAD,OAAc,SAAChE,GACzCU,QAAQ4C,MAAM,uBAAwBU,GACtC/D,IACGgE,OADH,yDAC4DD,IACzD7D,MAAK,WACJH,EAAS,CACPK,KAAMV,EACNW,QAAS0D,IAEXE,IAAMvD,MAAN,kBAAuBqD,EAAvB,sBAEDxD,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdyD,IAAMvD,MAAN,uCAA4CF,SCsDhDsC,aDlD0B,SAACiB,EAAUtB,GAAX,OAA0B,SAAC1C,GACrDU,QAAQ4C,MAAM,QAASU,EAAUtB,GACjChC,QAAQ4C,MAAM,uBAAwBU,GACtC/D,IACGkE,MADH,yDAC2DH,GAAY,CACnEtB,WAAYA,IAEbvC,MAAK,SAACC,GACLJ,EAAS,CACPK,KAAMT,EACNU,QAASF,EAAIG,OAEf2D,IAAME,QAAN,gCAAuC1B,OAExClC,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdyD,IAAMvD,MAAN,uCAA4CF,UC+BnCoD,CAIZjD,G,+BCpGGyD,E,kDACJ,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IAsBR0C,SAAW,SAACC,GACV7D,QAAQ4C,MAAMiB,EAAEC,OAAOrD,IACvB,EAAKsD,SAAL,eAAiBF,EAAEC,OAAOrD,GAAKoD,EAAEC,OAAOE,QACxChE,QAAQ4C,MAAM,aAAc,EAAKQ,MAAO,EAAKA,MAAMtC,OA1BlC,EA6BnBsB,SAAW,SAACyB,GACVA,EAAEI,iBACFjE,QAAQ4C,MAAM,UACd5C,QAAQ4C,MAAM,EAAKQ,OAEnB,IAAIvD,EAAO,EAAKuD,MAEa,UAAzBvD,EAAI,eACNG,QAAQ4C,MAAM,uBACd/C,EAAI,SAAc,IAElBG,QAAQ4C,MAAM,uBACd/C,EAAI,SAAc,GAGpB,EAAKqB,MAAMgD,UAAUrE,IA5CJ,EA+CnBsE,cAAgB,WAAO,IAAD,EAShB,EAAKf,MAPPtC,EAFkB,EAElBA,KACAe,EAHkB,EAGlBA,IACAuC,EAJkB,EAIlBA,QACApC,EALkB,EAKlBA,WACAqC,EANkB,EAMlBA,cACA1C,EAPkB,EAOlBA,UACAJ,EARkB,EAQlBA,MAEF,OACE,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKgB,KAAN,UACE,cAACiD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMnC,SAAU,EAAKA,SAArB,UACE,eAACmC,EAAA,EAAKC,IAAN,WACE,eAACD,EAAA,EAAKE,MAAN,CAAY5D,GAAI6D,IAAKC,UAAU,OAA/B,UACE,cAACJ,EAAA,EAAKK,MAAN,mBACA,cAACL,EAAA,EAAKM,QAAN,CACElF,KAAK,OACLmF,YAAY,kBACZC,UAAQ,EACRnB,SAAU,EAAKA,SACfI,MAAOlD,OAIX,eAACyD,EAAA,EAAKE,MAAN,CAAY5D,GAAI6D,IAAKC,UAAU,MAA/B,UACE,cAACJ,EAAA,EAAKK,MAAN,4BACA,cAACL,EAAA,EAAKM,QAAN,CACElF,KAAK,OACLmF,YAAY,gBACZC,UAAQ,EACRf,MAAOnC,EACP+B,SAAU,EAAKA,SACfoB,IAAK,EAAKC,yBAKhB,eAACV,EAAA,EAAKC,IAAN,WACE,eAACD,EAAA,EAAKE,MAAN,CAAY5D,GAAI6D,IAAKC,UAAU,aAA/B,UACE,cAACJ,EAAA,EAAKK,MAAN,yBACA,cAACL,EAAA,EAAKM,QAAN,CAAcjB,SAAU,EAAKA,SAAUI,MAAOhC,OAGhD,eAACuC,EAAA,EAAKE,MAAN,CAAY5D,GAAI6D,IAAKC,UAAU,gBAA/B,UACE,cAACJ,EAAA,EAAKK,MAAN,6BACA,eAACL,EAAA,EAAKM,QAAN,CACEhE,GAAG,SACH+C,SAAU,EAAKA,SACfI,MAAOK,EAHT,UAKE,4CACA,sDAKN,eAACE,EAAA,EAAKE,MAAN,CAAYE,UAAU,UAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,sBACA,cAACL,EAAA,EAAKM,QAAN,CACEC,YAAY,eACZd,MAAOI,EACPR,SAAU,EAAKA,cAInB,eAACW,EAAA,EAAKE,MAAN,CAAYE,UAAU,YAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,wBACA,cAACL,EAAA,EAAKM,QAAN,CAAcjB,SAAU,EAAKA,SAAUI,MAAOrC,OAGhD,eAAC4C,EAAA,EAAKE,MAAN,CAAYE,UAAU,QAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,oBACA,cAACL,EAAA,EAAKM,QAAN,CACEC,YAAY,oCACZlB,SAAU,EAAKA,SACfI,MAAOzC,OAIX,cAACR,EAAA,EAAD,CAAQC,QAAQ,UAAUrB,KAAK,SAA/B,8BA/HV,EAAKyD,MAAQ,CACXtC,KAAM,GACNe,IAAK,GACLuC,QAAS,mBACTpC,WAAY,oBACZqC,eAAe,EACf1C,UAAW,yBACXJ,MAAO,YATQ,E,kDAanB,WAAiC,IAAlB2D,EAAiB,uDAAL,IACrBC,EAAU,IAAIrD,KACdsD,EAAOD,EAAQE,UACfC,EAAQH,EAAQI,WAAa,EAC7BC,EAAOL,EAAQM,cACnB,MAAM,GAAN,OAAUD,GAAV,OAAiBN,GAAjB,OACEI,EAAQ,GAAR,WAAiBA,GAAjB,UAA8BA,IADhC,OAEGJ,GAFH,OAEeE,EAAO,GAAP,WAAgBA,GAAhB,UAA4BA,M,oBAuH7C,WACE,OACE,sBAAK9E,UAAU,YAAf,UACG,4DACAyC,KAAKoB,uB,GAhJUlB,IAAMC,WA0JfC,eAJS,SAACC,GAAD,MAAY,CAClCX,QAASW,EAAMC,OAAOZ,WAGgB,CAAEyB,UF5IjB,SAACrE,GAAD,OAAU,SAACP,GAClCU,QAAQ4C,MAAM/C,GACdN,IACGmG,KADH,iDAC0D7F,GACvDJ,MAAK,SAACC,GACLJ,EAAS,CACPK,KAAMX,EACNY,QAASF,EAAIG,KAAK8F,SAEpBnC,IAAMoC,KAAN,gBAAoB/F,EAAKiB,KAAzB,iBACAxB,EAASD,QAEVS,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdyD,IAAMvD,MAAN,qCAA0CF,UE8HjCoD,CAAwCQ,G,YC5JxC,SAASkC,IACtB,OACE,sBAAKvF,UAAU,MAAf,UACE,cAAC,IAAD,CACEwF,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEd,uBACA,cAAC,EAAD,IACA,uBACA,uBACA,cAAC,EAAD,O,mCChBAC,EAAe,CACnB9D,QAAS,IAiCI+D,EA9BO,WAAmC,IAAlCpD,EAAiC,uDAAzBmD,EAAcE,EAAW,uCACtD,OAAQA,EAAO9G,MACb,KAAKR,EACH,OAAO,eAAKiE,GAEd,KAAKhE,EACH,OAAO,2BAAKgE,GAAZ,IAAmBX,QAASgE,EAAO7G,UAErC,KAAKZ,EAGH,OAFAgB,QAAQ4C,MAAM,cAAe6D,EAAO7G,SACpCwD,EAAMX,QAAQiE,KAAKD,EAAO7G,SACnB,2BAAKwD,GAAZ,IACEX,QAASW,EAAMX,UAGnB,KAAKvD,EACH,OAAO,eAAKkE,GAEd,KAAKnE,EAGH,OAFAe,QAAQ4C,MAAM6D,EAAO7G,SACrBI,QAAQ4C,MAAM,KAAMQ,EAAMX,SACnB,2BAAKW,GAAZ,IACEX,QAASW,EAAMX,QAAQkE,QAAO,SAAAvG,GAAM,OAAIA,EAAOM,KAAO+F,EAAO7G,aAGjE,QACE,OAAO,eAAKwD,KCnCHwD,4BAAgB,CAAEvD,WCI3BwD,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCLnCO,EAAcvE,SAASwE,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAClB,EAAD,MAEFuB,K","file":"static/js/main.6f0e42dc.chunk.js","sourcesContent":["export const ADD_PERSON = \"ADD_PERSON\"\r\nexport const DELETE_PERSON = \"DELETE_PERSON\"\r\nexport const UPDATE_PERSON = \"UPDATE_PERSON\"\r\nexport const GET_PERSON = \"GET_PERSON\"\r\nexport const GET_PEOPLE = \"GET_PEOPLE\"\r\n","import {\r\n  GET_PERSON,\r\n  GET_PEOPLE,\r\n  ADD_PERSON,\r\n  UPDATE_PERSON,\r\n  DELETE_PERSON,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const fetchPersons = () => (dispatch) => {\r\n  axios\r\n    .get(`https://crud-person-node.herokuapp.com/persons`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_PEOPLE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const addPerson = (data) => (dispatch) => {\r\n  console.debug(data);\r\n  axios\r\n    .post(`https://crud-person-node.herokuapp.com/persons`, data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_PERSON,\r\n        payload: res.data.Person,\r\n      });\r\n      toast.dark(`Added ${data.name} to DataBase`);\r\n      dispatch(fetchPersons());\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      toast.error(`Error while adding person: ${err}`);\r\n    });\r\n};\r\n\r\nexport const deletePerson = (personId) => (dispatch) => {\r\n  console.debug(\"Triggering delete on\", personId);\r\n  axios\r\n    .delete(`https://crud-person-node.herokuapp.com/persons/${personId}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_PERSON,\r\n        payload: personId,\r\n      });\r\n      toast.error(`Deleted ${personId} from DataBase`);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      toast.error(`Error while deleting person: ${err}`);\r\n    });\r\n};\r\n\r\nexport const updatePerson = (personId, profession) => (dispatch) => {\r\n  console.debug(\"Data:\", personId, profession);\r\n  console.debug(\"Triggering update on\", personId);\r\n  axios\r\n    .patch(`https://crud-person-node.herokuapp.com/persons/${personId}`, {\r\n      profession: profession,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UPDATE_PERSON,\r\n        payload: res.data,\r\n      });\r\n      toast.success(`Profession changed to ${profession}`);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      toast.error(`Error while updating person: ${err}`);\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchPersons,\r\n  deletePerson,\r\n  updatePerson,\r\n} from \"../redux/actions/people\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardColumns from \"react-bootstrap/CardColumns\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Editable from \"react-bootstrap-editable\";\r\nimport \"../index.css\";\r\n\r\nclass People extends React.Component {\r\n  componentDidMount() {\r\n    document.title = \"CRUD\";\r\n    this.props.fetchPersons();\r\n  }\r\n\r\n  renderCard = (person) => {\r\n    return (\r\n      <Card\r\n        className=\"displayPerson mb-2 ml-2 p-3\"\r\n        bg=\"light\"\r\n        text=\"dark\"\r\n        id={`${person._id}`}\r\n        key={`${person._id}`}\r\n        border=\"info\"\r\n      >\r\n        <Card.Header as=\"h5\" id={`${person._id}_${person.name}`}>\r\n          {person.name}{\" \"}\r\n          <Button\r\n            variant=\"outline\"\r\n            className=\"deleteButton p-0\"\r\n            onClick={this.props.deletePerson.bind(this, person._id)}\r\n          >\r\n            🗑️\r\n          </Button>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Title id={`${person._id}_${person.about}}`}>\r\n            {person.about}\r\n          </Card.Title>\r\n          <Card.Text id={`${person._id}`}></Card.Text>\r\n        </Card.Body>\r\n\r\n        <ListGroup className=\"list-group-flush\">\r\n          <ListGroup.Item\r\n            key={`${person._id}_${person.languages}`}\r\n            id={`${person._id}_${person.languages}`}\r\n          >\r\n            <b>Understands: </b>\r\n            {person.languages.join(\", \")}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item\r\n            key={`${person._id}_${person.dob}`}\r\n            id={`${person._id}_${person.dob}`}\r\n          >\r\n            <b>Born On: </b>\r\n            {new Date(person.dob).toDateString()}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item\r\n            key={`${person._id}_${person.profession}`}\r\n            id={`${person._id}_${person.profession}`}\r\n          >\r\n            <b>Profession: </b>\r\n\r\n            <Editable\r\n              type=\"textfield\"\r\n              mode=\"inline\"\r\n              initialValue={person.profession}\r\n              editText=\"✏️\"\r\n              onSubmit={(profession) =>\r\n                this.props.updatePerson(person._id, profession)\r\n              }\r\n            />\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Card>\r\n    );\r\n  };\r\n  displayPeopleCards = () => {\r\n    return Object.values(this.props.persons).map((person, index) => {\r\n      console.debug(\"INDEX:\", person.name, index);\r\n      {\r\n        return this.renderCard(person);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {<h2>Exisiting People in Database</h2>}\r\n        <CardColumns>{this.displayPeopleCards()}</CardColumns>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  persons: state.people.persons,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  fetchPersons,\r\n  deletePerson,\r\n  updatePerson,\r\n})(People);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPerson } from \"../redux/actions/people\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Container, Col } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass AddPerson extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      dob: \"\",\r\n      address: \"New Delhi, India\",\r\n      profession: \"Software Engineer\",\r\n      maritalStatus: false,\r\n      languages: \"English, Hindi, Python\",\r\n      about: \"About me\",\r\n    };\r\n  }\r\n\r\n  getCurrentDate(separator = \"-\") {\r\n    let newDate = new Date();\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n    return `${year}${separator}${\r\n      month < 10 ? `0${month}` : `${month}`\r\n    }${separator}${date < 10 ? `0${date}` : `${date}`}`;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    console.debug(e.target.id);\r\n    this.setState({ [e.target.id]: e.target.value });\r\n    console.debug(\"this.state\", this.state, this.state.name);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.debug(\"Submit\");\r\n    console.debug(this.state);\r\n\r\n    let data = this.state;\r\n\r\n    if (data[\"maritalStatus\"] == \"Single\") {\r\n      console.debug(\"Single => Set False\");\r\n      data[\"married\"] = false;\r\n    } else {\r\n      console.debug(\"Married => Set True\");\r\n      data[\"married\"] = true;\r\n    }\r\n\r\n    this.props.addPerson(data);\r\n  };\r\n\r\n  addPersonForm = () => {\r\n    const {\r\n      name,\r\n      dob,\r\n      address,\r\n      profession,\r\n      maritalStatus,\r\n      languages,\r\n      about,\r\n    } = this.state;\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Container>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Name\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={name}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"dob\">\r\n                  <Form.Label>Date of Birth</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    placeholder=\"Date of Birth\"\r\n                    required\r\n                    value={dob}\r\n                    onChange={this.onChange}\r\n                    max={this.getCurrentDate()}\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"profession\">\r\n                  <Form.Label>Profession</Form.Label>\r\n                  <Form.Control onChange={this.onChange} value={profession} />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"maritalStatus\">\r\n                  <Form.Label>Marital Status</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={this.onChange}\r\n                    value={maritalStatus}\r\n                  >\r\n                    <option>Single</option>\r\n                    <option>Married</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Group controlId=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"1234 Main St\"\r\n                  value={address}\r\n                  onChange={this.onChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"languages\">\r\n                <Form.Label>Languages</Form.Label>\r\n                <Form.Control onChange={this.onChange} value={languages} />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"about\">\r\n                <Form.Label>About</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Write something about yourself...\"\r\n                  onChange={this.onChange}\r\n                  value={about}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {<h2>Add New Person to Database</h2>}\r\n        {this.addPersonForm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  persons: state.people.persons,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPerson })(AddPerson);\r\n","import People from \"./components/People\";\nimport AddPerson from \"./components/AddPerson\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <br />\n      <AddPerson />\n      <br />\n      <br />\n      <People />\n    </div>\n  );\n}\n","import {\r\n  GET_PERSON,\r\n  GET_PEOPLE,\r\n  ADD_PERSON,\r\n  UPDATE_PERSON,\r\n  DELETE_PERSON,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  persons: [],\r\n};\r\n\r\nconst personReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PERSON:\r\n      return { ...state };\r\n\r\n    case GET_PEOPLE:\r\n      return { ...state, persons: action.payload };\r\n\r\n    case ADD_PERSON:\r\n      console.debug(\"add person:\", action.payload);\r\n      state.persons.push(action.payload)\r\n      return { ...state,\r\n        persons: state.persons\r\n      };\r\n\r\n    case UPDATE_PERSON:\r\n      return { ...state };\r\n\r\n    case DELETE_PERSON:\r\n      console.debug(action.payload)\r\n      console.debug('sp', state.persons)\r\n      return { ...state,\r\n        persons: state.persons.filter(person => person._id != action.payload)\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default personReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport people from \"./people\";\r\n\r\nexport default combineReducers({ people });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n"],"sourceRoot":""}